akka.actor.default-mailbox {
  mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  mailbox-capacity = 100000
}

bounded-mailbox {
  mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  mailbox-capacity = 100000 
}

akka.actor.mailbox.requirements {
  "akka.dispatch.UnboundedControlAwareMailbox" = bounded-mailbox
}


akka.cluster.use-dispatcher = control-aware-dispatcher


control-aware-dispatcher {

  type = Dispatcher
  # executor = "fork-join-executor"
  executor = "thread-pool-executor"

  thread-pool-executor {
  #  parallelism-min = 2
  #  parallelism-max = 4
     fixed-pool-size = 1
     parallelism-max = 1
  }

  throughput = 100
}




akka {
  actor{
    default-dispatcher {
  		type = Dispatcher
 		 # executor = "fork-join-executor"
 		 executor = "thread-pool-executor"

  		thread-pool-executor {
 			#  parallelism-min = 2
  			#  parallelism-max = 4
  	 	 fixed-pool-size = 1 	 	 
  	 	 parallelism-max = 1
  		}
 	   throughput = 100
  
    }
  }
}

akka{
	remote{
		default-remote-dispatcher{
		  	type = Dispatcher
 			 # executor = "fork-join-executor"
 			 executor = "thread-pool-executor"

	  		thread-pool-executor {
	 			#  parallelism-min = 2
	  			#  parallelism-max = 4
	  	 	 fixed-pool-size = 1
	  	 	 parallelism-max = 1
	  		}
		}
		throughput = 100
	}
}



akka{
	actor{
		remote{
				default-remote-dispatcher{
				type = Dispatcher
	 			 # executor = "fork-join-executor"
	 			 executor = "thread-pool-executor"
	
		  		thread-pool-executor {
		 			#  parallelism-min = 2
		  			#  parallelism-max = 4
		  	 	 fixed-pool-size = 1
		  	 	 parallelism-max = 1
				}
			}
 	   	throughput = 10
 	   	
		}
	}
}




akka {
  actor {
    provider = "cluster"
  }
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }

    artery {
      # change this to enabled=on to use Artery instead of netty
      # see https://doc.akka.io/docs/akka/current/remoting-artery.html
      enabled = off
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }

  cluster {
    # Note - Artery uses akka:// addresses
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #auto-down-unreachable-after = 10s
  }
  

}


# Enable metrics extension in akka-cluster-metrics.
#akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host. 
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native